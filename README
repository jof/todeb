



                                                    Installing/removing files.
   ----------------------------------------------------------------------------

    In the `examples' dir is a `todeb.yaml' that specifies installing all the
    files under the `contents' directory.

   :; todeb < examples/simple-directory-example/todeb.yaml
   :; sudo dpkg -i todeb-working-dir/todeb-example_0.0.0.deb
   :; sudo dpkg -r todeb-example

    You have installed and removed a simple collection of files.




                      Installing/removing a simple collection of dependencies.
   ----------------------------------------------------------------------------

    The file `tex_install.yaml' specifies a few TeX packages I regularly use.

   :; todeb < examples/simple-dependencies-example/tex_install.yaml
   :; sudo gdebi todeb-working-dir/my-tex-stuff_0.0.0.deb
   :; sudo aptitude remove my-tex-stuff

    Note that you use `gdebi' on installation to ensure dependencies are
    resolved.

    Depending on what TeX packages you already have installed, maybe nothing
    happened. Any TeX packages installed as dependencies of `my-tex-stuff' are
    removed when `my-tex-stuff' is removed; the other packages are left alone.




                       Generating a bunch of packages and using them with Apt.
   ----------------------------------------------------------------------------

    Create a directory with debs in it, `/path/to/the/debs'. Scan the debs to
    create an index file and then add a line to your apt system's collection
    of repositories:

   :; cd /path/to/the/debs
   :; dpkg-scanpackages . /dev/null | gzip > Packages.gz
   :; echo 'deb file:/path/to/the/debs /' > /etc/apt/sources.list.d/some.list

    Now you can install your packages. Find out more:

      http://odzangba.wordpress.com/2006/10/13/how-to-build-local-apt-repositories/
      http://www.debian.org/doc/manuals/apt-howto/ch-basico.en.html#s-dpkg-scanpackages


